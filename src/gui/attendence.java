
package gui;

import Class.Clock;
import Class.FingerPrint;
import database.data;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;

/**
 *
 * @author Theekshana
 */
public class attendence extends javax.swing.JPanel {

    static attendence r;
    LocalTime lt = LocalTime.now();
    public attendence() {
        initComponents();
        design();
//        loademployee();

        try {
            Clock c = new Clock();
            c.currentTime(time, datel);
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Nic = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Finger = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        datel = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(32, 46, 128));
        jLabel3.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Attendence");
        jLabel3.setOpaque(true);
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 41));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee NIC", "Date", "In Time", "Out Time"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 57, 773, 394));

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        jLabel2.setText("Employee NIC");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 190, 131, 36));

        Name.setEditable(false);
        Name.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 16)); // NOI18N
        Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Name.setOpaque(false);
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });
        add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 239, 250, 36));

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        jLabel4.setText("Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 238, 131, 36));

        Nic.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 16)); // NOI18N
        Nic.setBorder(null);
        Nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NicActionPerformed(evt);
            }
        });
        Nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NicKeyReleased(evt);
            }
        });
        add(Nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 191, 250, 36));

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        jLabel5.setText("Finger Print");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 293, 131, 36));

        Finger.setBackground(new java.awt.Color(44, 102, 176));
        Finger.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fingrp.png"))); // NOI18N
        Finger.setOpaque(true);
        Finger.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FingerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FingerMouseEntered(evt);
            }
        });
        add(Finger, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 293, 250, 260));

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        jLabel6.setText("Time");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 148, 131, 36));

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        jLabel7.setText("Date");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 106, 131, 36));

        datel.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 16)); // NOI18N
        add(datel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 250, 36));

        time.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 16)); // NOI18N
        add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 240, 30));

        jProgressBar1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jProgressBar1.setForeground(new java.awt.Color(0, 153, 0));
        jProgressBar1.setStringPainted(true);
        add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 250, -1));

        jButton4.setBackground(new java.awt.Color(44, 102, 176));
        jButton4.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Enter ");
        jButton4.setContentAreaFilled(false);
        jButton4.setOpaque(true);
        jButton4.setVerifyInputWhenFocusTarget(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 470, 125, 39));

        jButton3.setBackground(new java.awt.Color(44, 102, 176));
        jButton3.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Load All");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.setVerifyInputWhenFocusTarget(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 530, 205, 57));

        jButton5.setBackground(new java.awt.Color(44, 102, 176));
        jButton5.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Cancel");
        jButton5.setContentAreaFilled(false);
        jButton5.setOpaque(true);
        jButton5.setVerifyInputWhenFocusTarget(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 530, 205, 57));
    }// </editor-fold>//GEN-END:initComponents

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_NameActionPerformed

    private void NicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NicActionPerformed

        String nic = Nic.getText();
        try {
            ResultSet r = data.search("SELECT nic,efname FROM employee WHERE nic= '" + nic + "'");
            System.out.println("awa");
            if (r.next()) {
                String s = r.getString("nic");
                String s1 = r.getString("efname");
                System.out.println(s);
                if (nic.equals(s)) {
                    Name.setText(s1);

                } else {
                    JOptionPane.showMessageDialog(this, "Please Enter Valid Employee NIC", "INFORM", JOptionPane.INFORMATION_MESSAGE);
                    Nic.setText(null);
                    Name.setText(null);
                    System.out.println("mara");
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please Enter Valid Employee NIC", "INFORM", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("theekshana");
                Nic.setText(null);
                Name.setText(null);
            }
        } catch (Exception e) {
            Nic.setText(null);
            Name.setText(null);
            e.printStackTrace();
        }
    }//GEN-LAST:event_NicActionPerformed

    private void NicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NicKeyReleased
        if (evt.getKeyCode() == evt.VK_BACK_SPACE) {
            Name.setText(null);
        }
    }//GEN-LAST:event_NicKeyReleased

    private void FingerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FingerMouseClicked

        jProgressBar1.setForeground(new Color(0, 153, 0));
        String fid = FingerPrint.read("D://Optician//Fingerprint//fingerprint.txt");

        Thread t = new Thread(new Runnable() {

            public void run() {
                try {

                    for (int i=0;i <= 100; i++) {
                        jProgressBar1.setValue(i);
                        Thread.sleep(10);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    jProgressBar1.setForeground(Color.RED);
                }
                try {
                    
                    ResultSet r = data.search("SELECT * FROM employee WHERE nic='" + Nic.getText() + "' ");
                    if (r.next()) {
                        String nic1 = r.getString("nic");
                        String finid1 = r.getString("fingerId");
                        System.out.println(nic1);
                        System.out.println(finid1);
                       
                            try {
                                System.out.println("status awa");
                                ResultSet r1 = data.search("SELECT * FROM attendence WHERE `employee_nic` = '" +nic1+ "' AND `date` = '"+ datel.getText()+"'");
                                if (r1.next()) {
//                                    try {
//                                        ResultSet r2 = data.search("SELECT * FROM attendence WHERE date='" + LocalDate.now().toString() + "' ");
//                                        if (r2.next()) {

                                            System.out.println("status awa2");
//                                            Vector v = new Vector();
//                                            v.add(r1.getString("employee_nic"));
//                                            v.add(r1.getString("date"));
//                                            v.add(r1.getString("inTime"));
//                                            String time1 = time.getText();
//                                            String time2 = datel.getText();
//                                            v.add(time1);
//                                            DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
//                                            dtm.addRow(v);
                                            
                                            
//                                            data.iud("update attendence set outTime='" + time1 + "' where employee_nic= '" + nic + "'");
                                            data.iud("UPDATE `attendence` SET `outTime` = '" + time.getText() + "' where employee_nic= '" + nic1 + "' AND `date` = '"+datel.getText()+"'");
                                            System.out.println("ammo hari");
                                            try {
                                                File logtxt = new File("C:/ProgramData/Optician/Security/Access/" + nic1+".txt");
                                                    logtxt.createNewFile();
                                                    FileWriter f=new FileWriter(logtxt);
                                                    BufferedWriter b=new BufferedWriter(f);
                                                    String idf=nic1;

                                                    b.write(idf+LocalDate.now()+LocalDate.now());
                                                    b.flush();
                                                    b.close();
                                                } catch (IOException e) {
                                                    e.printStackTrace();
                                                }
//                                                dtm.setRowCount(0);
                                                
//                                            } 
//                                        else {
//
//                                                System.out.println(nic1);
//
//                                                System.out.println("status else awa1");
//
////                                                Vector v = new Vector();
////                                                v.add(Nic.getText());
////                                                v.add(LocalDate.now());
////                                                v.add(time.getText());
////                                                System.out.println("status else awa2");
////                                                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
////                                                dtm.addRow(v);
//                                               
////                                                    String r4 = dtm.getValueAt(i, 0).toString();
////                                                    String r5 = dtm.getValueAt(i, 1).toString();
////                                                    String r6 = dtm.getValueAt(i, 2).toString();
////                                                    System.out.println("status else awa3");
////                                                    int time = lt.getHour() * 60 + 30;
////                                                    System.out.println(time);
//
//                                                    data.iud("INSERT INTO attendence(inTime,employee_nic,date)VALUES('" +time.getText()+ "','" + nic1 + "','" + datel.getText() + "' )");
//                                                    System.out.println("status else awainsert kla");
////                                                    dtm.setRowCount(0);
//                                                    int i1 =0;
//                                                    jProgressBar1.setValue(i1);
//                                                    File logtxt = new File("C:/ProgramData/Optician/Security/Access/" + nic1+".txt");
//                                                        logtxt.createNewFile();
//                                                        FileWriter f=new FileWriter(logtxt);
//                                                        BufferedWriter b=new BufferedWriter(f);
//                                                        String idf=nic1;
//                                                        String date=datel.getText();
//                                                        b.write(idf+date+LocalDate.now());
//                                                        b.flush();
//                                                        b.close();
//                                                    
//                                                }
//                                            }catch(IOException e){
//                                                e.printStackTrace();
//                                            } catch (Exception e) {
//                                                e.printStackTrace();
//                                                jProgressBar1.setForeground(Color.RED);
//                                                File logtxt = new File("C:/ProgramData/Optician/Security/Access/" + nic1+".txt");
//                                                    logtxt.createNewFile();
//                                                    FileWriter f=new FileWriter(logtxt);
//                                                    BufferedWriter b=new BufferedWriter(f);
//                                                    String text=nic1 +datel.getText() + time.getText();
//                                                    b.write(text);
//                                                    b.flush();
//                                                    b.close();
//
//                                                }
                                          
                                            
                                
                                
                                
                                
                                
                                } else {
                                                //insert
                                                System.out.println("status else awa alutn add wewi");

                                                System.out.println(nic1);
                                                System.out.println(finid1);

                                                System.out.println("status else awa1");
//                                                                                      
                                                    System.out.println("status else awa3");

                                                    data.iud("INSERT INTO attendence(`inTime`,`employee_nic`,`date`)VALUES('" + time.getText() + "','" + nic1+  "','" + datel.getText() + "' )");
                                                    System.out.println("status else awainsert kla");
//                                                    dtm.setRowCount(0);
                                                    int i1=0;
                                                    jProgressBar1.setValue(i1);
                                                    try {
                                                        File logtxt = new File("C: /ProgramData/Optician/Security/Access/ " + nic1+".txt");
                                                            logtxt.createNewFile();
                                                            FileWriter f=new FileWriter(logtxt);
                                                            BufferedWriter b=new BufferedWriter(f);
                                                            String idf=nic1;

                                                            b.write(idf+LocalDate.now()+LocalDate.now());
                                                            b.flush();
                                                            b.close();
                                                        } catch (IOException e) {
                                                            e.printStackTrace();
                                                        }

                                                    
                                                }
                                
                                
                                
                                
                                
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                                jProgressBar1.setForeground(Color.RED);
                                            }
                                        } else {
                                        jProgressBar1.setForeground(Color.RED);
                                    }
                                } catch (Exception e) {
                                    e.printStackTrace();
                                    jProgressBar1.setForeground(Color.RED);
                                }

                            }

                        });

                        t.start();

    }//GEN-LAST:event_FingerMouseClicked

    private void FingerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FingerMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_FingerMouseEntered

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        attend();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String n=Nic.getText();

        try {
            String nic = null;
            String name=null;
            ResultSet r = data.search("SELECT nic,efname, fingerId FROM employee WHERE nic='" + n + "' ");
            if (r.next()) {
                nic = r.getString("nic");
                String finid1 = r.getString("fingerId");
                name= r.getString("efname");
                //                String sta = r.getString("UserStatus_statusID");
                System.out.println(nic);
                System.out.println(finid1);

                try {
                    System.out.println("status awa");
                    ResultSet r1 = data.search("SELECT * FROM attendence WHERE employee_nic='" + nic + "' ");
                    if (r1.next()) {
                        try {
                            ResultSet r2 = data.search("SELECT * FROM attendence WHERE date='" + LocalDate.now().toString() + "' ");
                            if (r2.next()) {

                                System.out.println("status awa2");
                                Vector v = new Vector();
                                v.add(r1.getString("employee_nic"));
                                v.add(r1.getString("date"));
                                v.add(r1.getString("inTime"));
                                String time1 = time.getText();
                                v.add(time1);
                                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                                dtm.addRow(v);
                                int time = 8 * 60 + 30;//400
                                int in = lt.getHour() * 60 + 30;//300
                                int tim = 17 * 60 ;//500
                                int out = lt.getHour() * 60;//600
                                System.out.println(time);
                                System.out.println(time);
                                if(time<in||tim>out){
                                    String type="2";

                                }else if(time<in||tim<out){
                                    String type="2";

                                }else if(time>in||tim<out){
                                    String type="1";

                                }
                                data.iud("update attendence set outTime='" + time1 + "' where employee_nic= '" + nic + "'");
                                System.out.println("ammo hari");
                                try {
                                    File logtxt = new File("C:/ProgramData/Optician/Security/Access/ "  + nic+".txt");
                                    logtxt.createNewFile();
                                    FileWriter f=new FileWriter(logtxt);
                                    BufferedWriter b=new BufferedWriter(f);
                                    String idf=nic;

                                    b.write(idf+LocalDate.now()+LocalDate.now());
                                    b.flush();
                                    b.close();
                                } catch (IOException e) {
                                    e.printStackTrace();
                                }
                                dtm.setRowCount(0);
                            } else {

                                System.out.println(nic);

                                System.out.println("status else awa1");

                                Vector v = new Vector();
                                v.add(Nic.getText());
                                v.add(LocalDate.now());
                                v.add(time.getText());
                                System.out.println("status else awa2");
                                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                                dtm.addRow(v);
                                for (int i = 0; i < dtm.getRowCount(); i++) {
                                    String r4 = dtm.getValueAt(i, 0).toString();
                                    String r5 = dtm.getValueAt(i, 1).toString();
                                    String r6 = dtm.getValueAt(i, 2).toString();
                                    System.out.println("status else awa3");
                                    int time = lt.getHour() * 60 + 30;
                                    System.out.println(time);

                                    data.iud("INSERT INTO attendence(inTime,employee_nic,date)VALUES('" + r6.trim() + "','" + r4.trim() + "','" + r5.trim() + "')");
                                    System.out.println("status else awainsert kla");
                                    dtm.setRowCount(0);

                                    File logtxt = new File("C:/ProgramData/Optician/Security/Access/ " + nic+".txt");
                                    logtxt.createNewFile();
                                    FileWriter f=new FileWriter(logtxt);
                                    BufferedWriter b=new BufferedWriter(f);
                                    String idf=nic;
                                    String date=datel.getText();
                                    b.write(idf+date+LocalDate.now());
                                    b.flush();
                                    b.close();
                                }
                            }
                        }catch(IOException e){
                            e.printStackTrace();
                        } catch (Exception e) {
                            e.printStackTrace();

                            File logtxt = new File("C:/ProgramData/Optician/Security/Access/ " + nic+".txt");
                            logtxt.createNewFile();
                            FileWriter f=new FileWriter(logtxt);
                            BufferedWriter b=new BufferedWriter(f);
                            String text=nic +datel.getText() + time.getText();
                            b.write(text);
                            b.flush();
                            b.close();

                        }
                        //                                    System.out.println("status awa2");
                        //                                    Vector v = new Vector();
                        //                                    v.add(r1.getString("nic"));
                        //                                    v.add(r1.getString("Date"));
                        //                                    v.add(r1.getString("inTime"));
                        //                                    String time1 = time.getText();
                        //                                    v.add(time1);
                        //                                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        //                                    dtm.addRow(v);
                        //
                        //                                    System.out.println("ammo hari");
                        //                                    DATABASE.DB.IDU("update attendence set outTime='" + time1 + "' where nic= '" + nic + "'");

                    } else {
                        //insert
                        System.out.println("status else awa");

                        System.out.println(nic);

                        System.out.println("status else awa1");
                        Vector v = new Vector();
                        v.add(nic);
                        v.add(LocalDate.now());
                        v.add(time.getText());
                        System.out.println("status else awa2");
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.addRow(v);
                        for (int i = 0; i < dtm.getRowCount(); i++) {
                            String r4 = dtm.getValueAt(i, 0).toString();
                            String r5 = dtm.getValueAt(i, 1).toString();
                            String r6 = dtm.getValueAt(i, 2).toString();
                            //                                       String r4=dtm.getValueAt(i, 3).toString();
                            System.out.println("status else awa3");

                            data.iud("INSERT INTO attendence(inTime,employee_nic,date)VALUES('" + r6.trim() + "','" + r4.trim() + "','" + r5.trim() + "')");
                            System.out.println("status else awainsert kla");
                            dtm.setRowCount(0);
                            int i1=i=0;

                            try {
                                File logtxt = new File("C:/ProgramData/Optician/Security/Access/" + nic+".txt");
                                logtxt.createNewFile();
                                FileWriter f=new FileWriter(logtxt);
                                BufferedWriter b=new BufferedWriter(f);
                                String idf=nic;

                                b.write(idf+LocalDate.now()+LocalDate.now());
                                b.flush();
                                b.close();
                            } catch (IOException e) {
                                e.printStackTrace();
                            }

                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();

                }

            } else {

            }
        }catch(NullPointerException e){
            Nic.grabFocus();
        }

        catch (Exception e) {
            e.printStackTrace();

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    public static attendence viem1() {
        if (r == null) {
            r = new attendence();
        }
        return r;
    }

//     public void design() {
//
//        Font font = new Font("Maiandra GD", Font.BOLD, 18);
//        JTableHeader header = jTable2.getTableHeader();
//        header.setFont(font);
//        header.setOpaque(false);
//        header.setBackground(new Color(32,136,203));
//        header.setForeground(new Color(255,255,255));
//        
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Finger;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Nic;
    private javax.swing.JLabel datel;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables

//    public void loademployee(){
//    ResultSet rs = database.data.search("SELECT * FROM employee");
//        TableModel tdm = jTable2.getModel();
//        DefaultTableModel dtm = (DefaultTableModel) tdm;
//        dtm.setRowCount(0);
//
//        try {
//            while (rs.next()) {
//                Vector<String> vr = new Vector<>();
//                vr.add(rs.getString("nic"));
//                vr.add(rs.getString("fname"));
//                vr.add(rs.getString("lname"));
//                vr.add(rs.getString("contact"));
//                vr.add(rs.getString("address"));
//                vr.add(rs.getString("accountNo"));
//
//                ResultSet rs1 = database.data.search("SELECT `banckName` FROM bank WHERE bankId = '" + rs.getString("bank_bankId") + "';");
//
//                if (rs1.next()) {
//                    vr.add(rs1.getString("banckName"));
//
//                }
//                dtm.addRow(vr);
//            }
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//    
//    }

    
    public void attend(){
    try {
        ResultSet r=data.search("SELECT * FROM attendence");
        while(r.next()){
            Vector v=new Vector();
       v.add(r.getString("employee_nic"));
       v.add(r.getString("date"));
       v.add(r.getString("inTime"));
       v.add(r.getString("outTime"));
       DefaultTableModel dtm=(DefaultTableModel)jTable1.getModel();
       dtm.setRowCount(0);
       
       dtm.addRow(v);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }

}
       public void design() {

        Font font = new Font("Maiandra GD", Font.BOLD, 18);
        JTableHeader header = jTable1.getTableHeader();
        header.setFont(font);
        header.setOpaque(false);
        header.setBackground(new Color(9,0,82));
        header.setForeground(new Color(255,255,255));
        
    }
}
